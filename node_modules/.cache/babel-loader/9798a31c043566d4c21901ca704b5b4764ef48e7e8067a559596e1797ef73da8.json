{"ast":null,"code":"var _jsxFileName = \"/home/mheuangsayaseng/course_work/workshop/UNIV.PairExercise.ContactList/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport dummyContacts from \"../dummyData\";\nimport { ContactList, SingleContact } from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState({});\n  const getContacts = async () => {\n    try {\n      const response = await fetch(\"http://jsonplace-univclone.herokuapp.com/users\");\n      const result = await response.json();\n      setContacts(result);\n    } catch (error) {\n      console.err(error);\n    }\n  };\n  const selectContact = async contactId => {\n    const response = await fetch(`http://jsonplace-univclone.herokuapp.com/users/${contactId}`);\n    const contact = await response.json();\n    setSelectedContact(contact);\n  };\n  useEffect(() => {\n    getContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Contact List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: selectedContact.id ? /*#__PURE__*/_jsxDEV(SingleContact, {\n        selectedContact: selectedContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: contacts,\n        selectContact: selectContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 83\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"w+VjVS3YojeKqMgTm5QQxTvkPFw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","dummyContacts","ContactList","SingleContact","Main","contacts","setContacts","selectedContact","setSelectedContact","getContacts","response","fetch","result","json","error","console","err","selectContact","contactId","contact","id"],"sources":["/home/mheuangsayaseng/course_work/workshop/UNIV.PairExercise.ContactList/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport dummyContacts from \"../dummyData\";\nimport { ContactList, SingleContact } from \"./\";\n\nconst Main = () => {\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState({});\n\n  const getContacts = async () => {\n    try {\n      const response = await fetch(\n        \"http://jsonplace-univclone.herokuapp.com/users\"\n      );\n      const result = await response.json();\n\n      setContacts(result);\n    } catch (error) {\n      console.err(error);\n    }\n  };\n\n  const selectContact = async (contactId) => {\n    const response = await fetch(`http://jsonplace-univclone.herokuapp.com/users/${contactId}`);\n    const contact = await response.json();\n    setSelectedContact(contact);\n  }\n\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  return (\n    <div id=\"main\">\n      <div id=\"navbar\">\n        <div>Contact List</div>\n      </div>\n      <div id=\"container\">\n        {selectedContact.id ? <SingleContact selectedContact={selectedContact}/>: <ContactList contacts={contacts} selectContact={selectContact}/>}\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,cAAc;AACxC,SAASC,WAAW,EAAEC,aAAa,QAAQ,IAAI;AAAC;AAEhD,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1D,MAAMU,WAAW,GAAG,YAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gDAAgD,CACjD;MACD,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAEpCP,WAAW,CAACM,MAAM,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,aAAa,GAAG,MAAOC,SAAS,IAAK;IACzC,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDO,SAAU,EAAC,CAAC;IAC3F,MAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACG,IAAI,EAAE;IACrCL,kBAAkB,CAACW,OAAO,CAAC;EAC7B,CAAC;EAGDnB,SAAS,CAAC,MAAM;IACdS,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,EAAE,EAAC,MAAM;IAAA,wBACZ;MAAK,EAAE,EAAC,QAAQ;MAAA,uBACd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAuB;MAAA;MAAA;MAAA;IAAA,QACnB,eACN;MAAK,EAAE,EAAC,WAAW;MAAA,UAChBF,eAAe,CAACa,EAAE,gBAAG,QAAC,aAAa;QAAC,eAAe,EAAEb;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,gBAAE,QAAC,WAAW;QAAC,QAAQ,EAAEF,QAAS;QAAC,aAAa,EAAEY;MAAc;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAEtI;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAvCIb,IAAI;AAAA,KAAJA,IAAI;AAyCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}